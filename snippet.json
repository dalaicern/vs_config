{

	"for loop": {
		"prefix": "forloop",
		"body": [
			"for (int i = 0; i < n; i++) {",
     	 	"    ",
      		"}"
		],
		"description": "for loop"
	},

	"segment tree": {
		"prefix": "segment",
		"body": [
			"class St{",
			"private:",
			"    vector<int> st;",
			"",
			"public:",
			"    St(int n){",
			"        st.resize(4 * n, 0);",
			"    }",
			"",
			"    void print() {",
			"        for (int val : st) {",
			"            cout << val << \" \";",
			"        }",
			"        cout << endl;",
			"    }",
			"",
			"    void merge(int pos, int val){",
			"        st[pos] = val;",
			"    }",
			"",
			"    int op(int a, int b){",
			"        return a + b;",
			"    }",
			"",
			"    void build(vector<int> &arr, int lx, int rx, int pos){",
			"        if(lx == rx){",
			"            merge(pos, arr[lx]);",
			"            return;",
			"        }",
			"",
			"        int mid = lx + (rx - lx) / 2;",
			"",
			"        build(arr, lx, mid, 2 * pos + 1);",
			"        build(arr, mid + 1, rx, 2 * pos + 2);",
			"",
			"        st[pos] = op(st[2 * pos + 1], st[2 * pos + 2]);",
			"    }",
			"",
			"    void update(int index, int val, int lx, int rx, int pos){",
			"        if(lx == rx){",
			"            merge(pos, val);",
			"            return;",
			"        }",
			"",
			"        int mid = lx + (rx - lx) / 2;",
			"",
			"        if(mid >= index) update(index, val, lx, mid, 2 * pos + 1);",
			"        else update(index, val, mid + 1, rx, 2 * pos + 2);",
			"",
			"        st[pos] = op(st[2 * pos + 1], st[2 * pos + 2]);",
			"    }",
			"",
			"    int query(int l, int r, int lx, int rx, int pos){",
			"        if(l <= lx && rx <= r){",
			"            return st[pos];",
			"        }",
			"        if(rx < l || r < lx) return 0;",
			"",
			"",
			"",
			"        int mid = lx + (rx - lx) / 2;",
			"",
			"        int left = query(l, r, lx, mid, 2 * pos + 1);",
			"        int right = query(l, r, mid + 1, rx, 2 * pos + 2);",
			"",
			"        return op(left, right);",
			"    }",
			"",
			"};"

		]
	},

	"main function": {
		"prefix": "base",
		"body": [
			"#include <bits/stdc++.h>",
			"",
			"//#define int              long long",
			"#define vi              vector<int >",
			"#define vii              vector<vector<int > >",
			"#define pii             pair<int , int >",
			"#define R(i , n, a) for(int i = n; i >= a; i--)",
			"#define all(x) begin(x), end(x)",
			"#define debug(x) cout << #x << \" = \" << x << \" \"",
			"#define debug2(x, y) cout << #x << \" = \" << x << \" \" << #y << \" = \" << y << \" \"",
			"#define debug3(x, y, z) cout << #x << \" = \" << x << \" \" << #y << \" = \" << y << \" \" << #z << \" = \" << z << \" \"",
			"",
			"using namespace std;",
			"const int MOD = 1e9 + 7;",
			"",
			"void solve(){",
			"    ",
			"}",
			"",
			"",
			"signed main() {",
			"",
			"    ios::sync_with_stdio(0);",
			"    cin.tie(0), cout.tie(0);",
			"    int t = 1;",
			"    cin >> t;",
			"    while(t--) {",
			"        solve();",
			"    }",
			"",
			"}"
		],
		"description": "Base struct of main function"
	  }

	
}